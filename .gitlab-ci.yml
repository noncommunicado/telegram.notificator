stages:
  - build
  - test
  - docker_image
  - deploy
  - cleanup

variables:
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  DOCKER_REGISTRY: 'registry.neftm.local'
  DOCKER_REPOSITORY_NAME: 'neftm/notificator'
  SERVER_APP_FOLDER_DEV: '/opt/docker/notificator/dev'
  SERVER_APP_FOLDER_PROD: '/opt/docker/notificator/prod'


cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json'
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'
  policy: pull-push

## ----------------------------------------------------------------------------------

build:
  stage: build
  script:
    - docker build -t $DOCKER_REPOSITORY_NAME:$CI_COMMIT_SHORT_SHA -f ./docs/dockerfile_unit_tests .

test:
  stage: test
  script:
    - docker run --rm $DOCKER_REPOSITORY_NAME:$CI_COMMIT_SHORT_SHA test --no-restore

docker_image_publishing:
  stage: docker_image
  environment: production
  needs:
    - build
    - test
  script:
    - 'docker build -f ./src/presentation/Yandex.Weather.Integration.Api/Dockerfile --tag "$DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:$CI_COMMIT_SHORT_SHA" --tag "$DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:latest" .'
    - 'docker push "$DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:$CI_COMMIT_SHORT_SHA"'
    - 'docker push "$DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:latest"'

#deploy dev:
#  stage: deploy_dev
#  environment: production
#  needs:
#    - build
#    - test
#    - docker_image_publishing
#  script:
#    - 'cd $SERVER_APP_FOLDER_DEV'
#    - 'docker pull $DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:latest'
#    - 'docker compose down'
#    - 'docker compose up -d'

deploy prod:
  stage: deploy
  environment: production
  when: manual
  needs:
    - build
    - test
    - docker_image_publishing
  script:
    - 'cd $SERVER_APP_FOLDER_PROD'
    - 'docker pull $DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:latest'
    - 'docker compose down'
    - 'docker compose up -d'

cleanup:
  stage: cleanup
  when: always
  script:
    - docker image rm $DOCKER_REGISTRY/$DOCKER_REPOSITORY_NAME:$CI_COMMIT_SHORT_SHA -f
    - docker image rm $DOCKER_REPOSITORY_NAME:$CI_COMMIT_SHORT_SHA -f