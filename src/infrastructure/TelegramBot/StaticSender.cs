using Serilog;
using Telegram.Bot;
using Telegram.Bot.Types.Enums;
using TelegramBot.UpdateHandlers.Common;

namespace TelegramBot;

public sealed class StaticSender
{
	public static Task SendUserIdAsync(UpdateHandlerContext context)
	{
		return context.Client.SendTextMessageAsync(
			context.Update.Message!.Chat.Id,
			GetMessagePrivateText(context),
			parseMode: ParseMode.Html,
			cancellationToken: context.CancellationToken);
	}

	public static Task SendGroupIdAsync(UpdateHandlerContext context)
	{
		Log.Information("Sending reply chat Id to {ChatId};", context.Update.Message?.Chat.Id);
		return context.Client.SendTextMessageAsync(
			context.Update.Message!.Chat.Id,
			GetMessageGroupText(context),
			messageThreadId: context.Update.Message.MessageThreadId,
			parseMode: ParseMode.Html,
			cancellationToken: context.CancellationToken);
	}

	private static string GetMessagePrivateText(UpdateHandlerContext context)
	{
		return
			$"üî∂ Id —á–∞—Ç–∞: <pre>{context.Update.Message.Chat.Id}</pre>{Environment.NewLine}<i>–°–æ–æ–±—â–∏—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞</i>";
	}
	private static string GetMessageGroupText(UpdateHandlerContext context)
	{
		if (context.Update.Message.MessageThreadId is null)
			return
				$"üî∂ Id –≥—Ä—É–ø–ø—ã: <pre>{context.Update.Message.Chat.Id}</pre>{Environment.NewLine}<i>–°–æ–æ–±—â–∏—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã</i>";
		else
			return
				$"üî∂ Id –≥—Ä—É–ø–ø—ã: <pre>{context.Update.Message.Chat.Id}</pre>{Environment.NewLine}‚ö†Ô∏è Id —Ç–æ–ø–∏–∫–∞: <pre>{context.Update.Message.MessageThreadId}</pre>{Environment.NewLine}<i>–°–æ–æ–±—â–∏—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ø–∏–∫–∞</i>";
	}
}