// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Contexts.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240515093453_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.GroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("SysCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sys_code");

                    b.Property<DateTime?>("SysCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("sys_created");

                    b.HasKey("Id")
                        .HasName("pk_group");

                    b.HasIndex("SysCode")
                        .IsUnique()
                        .HasDatabaseName("ix_group_sys_code");

                    b.ToTable("group", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.GroupMemberEntity", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint")
                        .HasColumnName("chat_id");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("group_id");

                    b.Property<int>("ThreadId")
                        .HasColumnType("integer")
                        .HasColumnName("thread_id");

                    b.Property<DateTime?>("SysCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("sys_created");

                    b.HasKey("ChatId", "GroupId", "ThreadId")
                        .HasName("pk_group_member");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ix_group_member_group_id");

                    b.ToTable("group_member", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("DisableNotification")
                        .HasColumnType("boolean")
                        .HasColumnName("disable_notification");

                    b.Property<DateTime?>("SysCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("sys_created");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_message");

                    b.ToTable("message", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.GroupMemberEntity", b =>
                {
                    b.HasOne("Domain.Entities.GroupEntity", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_group_member_group_group_id");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Domain.Entities.GroupEntity", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
